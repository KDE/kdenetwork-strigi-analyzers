cmake_minimum_required(VERSION 2.8.9)
project(strigi-analyzer)

if(NOT INSIDE_KDENETWORK)
    message("Not building inside KDENetwork, loading KDE CMake Macros.")

    find_package(KDE4 REQUIRED)

    include(KDE4Defaults)
    include(MacroLibrary)

    include(CheckIncludeFile)
    include(CheckIncludeFiles)
    include(CheckSymbolExists)
    include(CheckFunctionExists)
    include(CheckLibraryExists)
    include(CheckPrototypeExists)
    include(CheckTypeSize)

    set(CMAKE_REQUIRED_DEFINITIONS ${_KDE4_PLATFORM_DEFINITIONS})
    if(WIN32)
       set(CMAKE_REQUIRED_LIBRARIES ${KDEWIN32_LIBRARIES})
       set(CMAKE_REQUIRED_INCLUDES  ${KDEWIN32_INCLUDES})
    endif(WIN32)
    add_definitions(${QT_DEFINITIONS} ${QT_QTDBUS_DEFINITIONS} ${KDE4_DEFINITIONS})
    add_definitions(-DQT_USE_FAST_CONCATENATION -DQT_USE_FAST_OPERATOR_PLUS)
    include_directories(${CMAKE_SOURCE_DIR} ${CMAKE_BINARY_DIR} ${KDE4_INCLUDES})
endif(NOT INSIDE_KDENETWORK)

macro_optional_find_package(Strigi)
macro_log_feature(STRIGI_FOUND "Strigi" "Metadata extraction" "" FALSE "" "Needed to get metadata for .torrent files")

macro_optional_find_package(Boost)
macro_log_feature(Boost_FOUND "Boost C++ Libraries" "http://www.boost.org" "" TRUE "" "Boost is required to build the torrent analyzer")

if(STRIGI_FOUND)
    add_subdirectory(torrent)
endif(STRIGI_FOUND)

if (NOT INSIDE_KDENETWORK)
    macro_display_feature_log()
endif ()
